eventuate.log.leveldb.dir = "target/location-"-${port}
eventuate.snapshot.filesystem.dir = "target/snapshots"-${port}

kamon.metric.filters {
  akka-actor {
    includes = ["location/user/manager*", "location/user/output-writer*", "location/user/snapshot-manager*", "location/user/manager/*", "location/user/manager/a", "location/user/manager*/a*"]
  }
}

akka {
  actor {
    serializers {
      domain-event-serializer = "event.CustomStringSerializer"
      kryo = "com.twitter.chill.akka.AkkaSerializer"
    }
    provider = "akka.remote.RemoteActorRefProvider"

    serialization-bindings {
      "java.lang.Long" = kryo
      "scala.collection.TraversableLike" = kryo
      "event.EventRead" = domain-event-serializer
      "scala.Product" = kryo
    }
  }


  kafka.consumer.kafka-clients {
    enable.auto.commit = true
    auto.commit.interval.ms = 10000
  }

  remote {
    enabled-transports = ["akka.remote.netty.ssl"]
    netty.ssl {
      enable-ssl = true
      hostname = "127.0.0.1"
      port = ${port}
      security {
        key-store = "src/main/resources/keystore"
        key-store-password = "09040407050407080702010C0903090D0C0E0906"
        key-password = "09040407050407080702010C0903090D0C0E0906"
        trust-store = "src/main/resources/truststore"
        trust-store-password = "09040407050407080702010C0903090D0C0E0906"
        protocol = "TLSv1"
        random-number-generator = "AES128CounterSecureRNG"
        enabled-algorithms = ["TLS_RSA_WITH_AES_128_CBC_SHA"]
      }
    }
  }
}